{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\nconst sagaMonitor = process.env.NODE_ENV === 'development' ? console.tron.createSagaMonitor() : null;\nconst sagaMiddleware = createSagaMiddleware();\nconst enhancer = process.env.NODE_ENV === \"development\" ? compose(console.tron.createEnhancer(), applyMiddleware(sagaMiddleware)) : applyMiddleware(sagaMiddleware);\nconst store = createStore(rootReducer, enhancer);\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["/home/rafaelbritez/Desktop/redux/src/store/index.js"],"names":["createStore","applyMiddleware","compose","createSagaMiddleware","rootReducer","rootSaga","sagaMonitor","process","env","NODE_ENV","console","tron","createSagaMonitor","sagaMiddleware","enhancer","createEnhancer","store","run"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAqCC,OAArC,QAAmD,OAAnD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAwB,aAAxB,GACpBC,OAAO,CAACC,IAAR,CAAaC,iBAAb,EADoB,GACc,IADlC;AAEA,MAAMC,cAAc,GAAGV,oBAAoB,EAA3C;AACA,MAAMW,QAAQ,GAAGP,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACjBP,OAAO,CAAEQ,OAAO,CAACC,IAAR,CAAaI,cAAb,EAAF,EAAgCd,eAAe,CAACY,cAAD,CAA/C,CADU,GACyDZ,eAAe,CAACY,cAAD,CADzF;AAEA,MAAMG,KAAK,GAAGhB,WAAW,CAACI,WAAD,EAAcU,QAAd,CAAzB;AAEAD,cAAc,CAACI,GAAf,CAAmBZ,QAAnB;AAEA,eAAeW,KAAf","sourcesContent":["import {createStore, applyMiddleware,compose} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\n\nconst sagaMonitor = process.env.NODE_ENV ==='development'?\nconsole.tron.createSagaMonitor(): null;\nconst sagaMiddleware = createSagaMiddleware();\nconst enhancer = process.env.NODE_ENV === \"development\" ?\ncompose( console.tron.createEnhancer(),applyMiddleware(sagaMiddleware)) : applyMiddleware(sagaMiddleware);\nconst store = createStore(rootReducer, enhancer);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n\n"]},"metadata":{},"sourceType":"module"}