{"ast":null,"code":"import _objectSpread from \"/home/rafaelbritez/Desktop/redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { call, put, select, all, takeLatest } from 'redux-saga/effects';\nimport api from '../../../services/api';\nimport { addToCartSuccess, updateAmount } from './actions';\nimport { formatPrice } from '../../../util/format';\n\nfunction* addToCart({\n  id\n}) {\n  const productExists = yield select(state => state.cart.find(p => p.id === id));\n\n  if (productExists) {\n    const amount = productExists.amount + 1;\n    yield put(updateAmount(id, amount));\n  } else {\n    const response = yield call(api.get, `/products/${id}`);\n\n    const data = _objectSpread({}, response.data, {\n      amount: 1,\n      priceFormatted: formatPrice(response.data.price)\n    });\n\n    yield put(addToCartSuccess(data));\n  }\n}\n\nexport default all([takeLatest('@cart/ADD_REQUEST', addToCart)]);","map":{"version":3,"sources":["/home/rafaelbritez/Desktop/redux/src/store/modules/cart/sagas.js"],"names":["call","put","select","all","takeLatest","api","addToCartSuccess","updateAmount","formatPrice","addToCart","id","productExists","state","cart","find","p","amount","response","get","data","priceFormatted","price"],"mappings":";AAAA,SAAQA,IAAR,EAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,GAA3B,EAA+BC,UAA/B,QAAgD,oBAAhD;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAAQC,gBAAR,EAA2BC,YAA3B,QAA6C,WAA7C;AACA,SAASC,WAAT,QAA4B,sBAA5B;;AAEA,UAAUC,SAAV,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAAyB;AACvB,QAAMC,aAAa,GAAG,MAAMT,MAAM,CAChCU,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBC,CAAC,IAAEA,CAAC,CAACL,EAAF,KAASA,EAA5B,CADuB,CAAlC;;AAGA,MAAGC,aAAH,EAAiB;AACf,UAAMK,MAAM,GAAGL,aAAa,CAACK,MAAd,GAAsB,CAArC;AAEA,UAAMf,GAAG,CAAEM,YAAY,CAACG,EAAD,EAAIM,MAAJ,CAAd,CAAT;AAED,GALD,MAMI;AACF,UAAMC,QAAQ,GAAG,MAAMjB,IAAI,CAACK,GAAG,CAACa,GAAL,EAAU,aAAYR,EAAG,EAAzB,CAA3B;;AAEA,UAAMS,IAAI,qBACLF,QAAQ,CAACE,IADJ;AAERH,MAAAA,MAAM,EAAG,CAFD;AAGRI,MAAAA,cAAc,EAAEZ,WAAW,CAACS,QAAQ,CAACE,IAAT,CAAcE,KAAf;AAHnB,MAAV;;AAMA,UAAMpB,GAAG,CAACK,gBAAgB,CAACa,IAAD,CAAjB,CAAT;AAED;AAEF;;AACD,eAAehB,GAAG,CAAC,CAACC,UAAU,CAAC,mBAAD,EAAsBK,SAAtB,CAAX,CAAD,CAAlB","sourcesContent":["import {call, put, select, all,takeLatest} from 'redux-saga/effects';\nimport api from '../../../services/api';\nimport {addToCartSuccess , updateAmount}from './actions';\nimport { formatPrice } from '../../../util/format';\n\nfunction* addToCart({id}){\n  const productExists = yield select(\n    state => state.cart.find(p=>p.id === id),\n  )\n  if(productExists){\n    const amount = productExists.amount +1\n\n    yield put (updateAmount(id,amount));\n\n  }\n  else{\n    const response = yield call(api.get,`/products/${id}`);\n\n    const data = {\n      ...response.data,\n      amount : 1,\n      priceFormatted: formatPrice(response.data.price),\n    }\n\n    yield put(addToCartSuccess(data));\n\n  }\n\n}\nexport default all([takeLatest('@cart/ADD_REQUEST', addToCart),\n]);\n"]},"metadata":{},"sourceType":"module"}