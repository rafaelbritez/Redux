{"ast":null,"code":"import _objectSpread from \"/home/rafaelbritez/Desktop/redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { call, put, select, all, takeLatest } from 'redux-saga/effects';\nimport api from '../../../services/api';\nimport { addToCartSuccess } from './actions';\nimport { formatPrice } from '../../../util/format';\n\nfunction* addToCart({\n  id\n}) {\n  const productExists = yield select(state => state.cart.find(p => p.id === id));\n\n  if (productExists) {} else {\n    const response = yield call(api.get, `/products/${id}`);\n\n    const data = _objectSpread({}, response.data, {\n      amount: 1,\n      priceFormatted: formatPrice(response.data.price)\n    });\n\n    yield put(addToCartSuccess(data));\n  }\n}\n\nexport default all([takeLatest('@cart/ADD_REQUEST', addToCart)]);","map":{"version":3,"sources":["/home/rafaelbritez/Desktop/redux/src/store/modules/cart/sagas.js"],"names":["call","put","select","all","takeLatest","api","addToCartSuccess","formatPrice","addToCart","id","productExists","state","cart","find","p","response","get","data","amount","priceFormatted","price"],"mappings":";AAAA,SAAQA,IAAR,EAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,GAA3B,EAA+BC,UAA/B,QAAgD,oBAAhD;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAAQC,gBAAR,QAA8B,WAA9B;AACA,SAASC,WAAT,QAA4B,sBAA5B;;AAEA,UAAUC,SAAV,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAAyB;AACvB,QAAMC,aAAa,GAAG,MAAMR,MAAM,CAChCS,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBC,CAAC,IAAEA,CAAC,CAACL,EAAF,KAASA,EAA5B,CADuB,CAAlC;;AAGA,MAAGC,aAAH,EAAiB,CAEhB,CAFD,MAGI;AACF,UAAMK,QAAQ,GAAG,MAAMf,IAAI,CAACK,GAAG,CAACW,GAAL,EAAU,aAAYP,EAAG,EAAzB,CAA3B;;AAEA,UAAMQ,IAAI,qBACLF,QAAQ,CAACE,IADJ;AAERC,MAAAA,MAAM,EAAG,CAFD;AAGRC,MAAAA,cAAc,EAAEZ,WAAW,CAACQ,QAAQ,CAACE,IAAT,CAAcG,KAAf;AAHnB,MAAV;;AAMA,UAAMnB,GAAG,CAACK,gBAAgB,CAACW,IAAD,CAAjB,CAAT;AAED;AAEF;;AACD,eAAed,GAAG,CAAC,CAACC,UAAU,CAAC,mBAAD,EAAsBI,SAAtB,CAAX,CAAD,CAAlB","sourcesContent":["import {call, put, select, all,takeLatest} from 'redux-saga/effects';\nimport api from '../../../services/api';\nimport {addToCartSuccess}from './actions';\nimport { formatPrice } from '../../../util/format';\n\nfunction* addToCart({id}){\n  const productExists = yield select(\n    state => state.cart.find(p=>p.id === id),\n  )\n  if(productExists){\n\n  }\n  else{\n    const response = yield call(api.get,`/products/${id}`);\n\n    const data = {\n      ...response.data,\n      amount : 1,\n      priceFormatted: formatPrice(response.data.price),\n    }\n\n    yield put(addToCartSuccess(data));\n\n  }\n\n}\nexport default all([takeLatest('@cart/ADD_REQUEST', addToCart),\n]);\n"]},"metadata":{},"sourceType":"module"}